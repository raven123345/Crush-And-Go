//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/SG_Car_Package/Scripts/SG_InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SG_InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SG_InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SG_InputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerOne"",
            ""id"": ""dbd614d5-0678-4a2e-a561-823906395f56"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""0db969cf-17a4-4847-9217-b53a201b7de4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Directions"",
                    ""type"": ""Value"",
                    ""id"": ""36830b7b-18e2-4bb3-b261-424c6b29fe28"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""98a72a23-99a9-44b3-b124-e33fbe5ad0dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CarReset"",
                    ""type"": ""Button"",
                    ""id"": ""74dce131-7df3-4ba5-b05d-f87b57c8381c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e0ffdf36-c0b2-4b97-9f3c-29e3765d414e"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Turn"",
                    ""id"": ""d1374c99-77f0-4a7a-bc49-db500da6ea2f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d6dc5e19-681f-461c-b4b3-136583a64c85"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ff3d534c-0479-4c2c-9324-ee67e1fd8d33"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""37215054-0cb5-42ad-a1c9-1a0f34799fca"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c7312b7b-25fd-428e-a184-87fd64395e1e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0085de2b-db60-406e-8635-03b752677e06"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84b42770-a6bb-43a0-89d8-a2774e33fa82"",
                    ""path"": ""<Keyboard>/home"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CarReset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerOne
        m_PlayerOne = asset.FindActionMap("PlayerOne", throwIfNotFound: true);
        m_PlayerOne_Accelerate = m_PlayerOne.FindAction("Accelerate", throwIfNotFound: true);
        m_PlayerOne_Directions = m_PlayerOne.FindAction("Directions", throwIfNotFound: true);
        m_PlayerOne_Brake = m_PlayerOne.FindAction("Brake", throwIfNotFound: true);
        m_PlayerOne_CarReset = m_PlayerOne.FindAction("CarReset", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerOne
    private readonly InputActionMap m_PlayerOne;
    private IPlayerOneActions m_PlayerOneActionsCallbackInterface;
    private readonly InputAction m_PlayerOne_Accelerate;
    private readonly InputAction m_PlayerOne_Directions;
    private readonly InputAction m_PlayerOne_Brake;
    private readonly InputAction m_PlayerOne_CarReset;
    public struct PlayerOneActions
    {
        private @SG_InputActions m_Wrapper;
        public PlayerOneActions(@SG_InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_PlayerOne_Accelerate;
        public InputAction @Directions => m_Wrapper.m_PlayerOne_Directions;
        public InputAction @Brake => m_Wrapper.m_PlayerOne_Brake;
        public InputAction @CarReset => m_Wrapper.m_PlayerOne_CarReset;
        public InputActionMap Get() { return m_Wrapper.m_PlayerOne; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerOneActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerOneActions instance)
        {
            if (m_Wrapper.m_PlayerOneActionsCallbackInterface != null)
            {
                @Accelerate.started -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnAccelerate;
                @Accelerate.performed -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnAccelerate;
                @Accelerate.canceled -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnAccelerate;
                @Directions.started -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnDirections;
                @Directions.performed -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnDirections;
                @Directions.canceled -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnDirections;
                @Brake.started -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnBrake;
                @CarReset.started -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnCarReset;
                @CarReset.performed -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnCarReset;
                @CarReset.canceled -= m_Wrapper.m_PlayerOneActionsCallbackInterface.OnCarReset;
            }
            m_Wrapper.m_PlayerOneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Accelerate.started += instance.OnAccelerate;
                @Accelerate.performed += instance.OnAccelerate;
                @Accelerate.canceled += instance.OnAccelerate;
                @Directions.started += instance.OnDirections;
                @Directions.performed += instance.OnDirections;
                @Directions.canceled += instance.OnDirections;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @CarReset.started += instance.OnCarReset;
                @CarReset.performed += instance.OnCarReset;
                @CarReset.canceled += instance.OnCarReset;
            }
        }
    }
    public PlayerOneActions @PlayerOne => new PlayerOneActions(this);
    public interface IPlayerOneActions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnDirections(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnCarReset(InputAction.CallbackContext context);
    }
}
